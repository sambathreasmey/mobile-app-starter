name: Flutter CI (Android + iOS)

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: write

concurrency:
  group: flutter-${{ github.ref }}
  cancel-in-progress: true

jobs:
  android:
    name: Android (APK & AAB)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Build AAB (Play Store)
        run: flutter build appbundle --release

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  ios:
    name: iOS (Unsigned & Signed)
    runs-on: macos-14
    env:
      # Set your iOS bundle id here or pass via repo env
      IOS_BUNDLE_ID: com.example.app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: stable
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods -N
          cd ios && pod install --repo-update

      # ---------- OPTION A: Unsigned archive (quick CI) ----------
      - name: Build iOS (no codesign)
        run: |
          flutter build ipa --no-codesign

      - name: Upload Unsigned IPA/xcarchive
        uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned
          path: |
            build/ios/ipa/*.ipa
            build/ios/archive/*.xcarchive
        if: always()

      # ---------- OPTION B: Signed IPA (requires secrets) ----------
      # 1) Generate/export a .p12 signing cert and a .mobileprovision
      # 2) Base64-encode them and save in repo secrets:
      #    P12_BASE64, P12_PASSWORD, MOBILEPROVISION_BASE64
      #    Optionally: APPLE_TEAM_ID, APPLE_SIGNING_IDENTITY
      - name: Import signing certificate
        if: ${{ secrets.P12_BASE64 && secrets.MOBILEPROVISION_BASE64 }}
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
          mobileprovision-file-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}

      - name: Build iOS (signed IPA)
        if: ${{ secrets.P12_BASE64 && secrets.MOBILEPROVISION_BASE64 }}
        run: |
          # Create ExportOptions for App Store or AdHoc (choose one)
          cat > ExportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>compileBitcode</key><false/>
            <key>destination</key><string>export</string>
            <key>signingStyle</key><string>manual</string>
            <key>stripSwiftSymbols</key><true/>
            <key>uploadSymbols</key><true/>
            <key>teamID</key><string>${{ secrets.APPLE_TEAM_ID }}</string>
            <key>provisioningProfiles</key>
            <dict>
              <key>${IOS_BUNDLE_ID}</key><string>${{ env.IOS_PROFILE_NAME || 'AppStoreProfile' }}</string>
            </dict>
          </dict>
          </plist>
          PLIST

          # Build & export signed IPA using Flutter's xcode backend
          flutter build ipa --export-options-plist=ExportOptions.plist

      - name: Upload Signed IPA
        if: ${{ secrets.P12_BASE64 && secrets.MOBILEPROVISION_BASE64 }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-signed
          path: build/ios/ipa/*.ipa

  release:
    name: Publish Release (when tag v*)
    needs: [android, ios]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/ios/ipa/*.ipa
